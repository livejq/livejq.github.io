<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>liveJQ</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.livejq.top/"/>
  <updated>2020-10-22T13:38:05.581Z</updated>
  <id>https://www.livejq.top/</id>
  
  <author>
    <name>liveJQ</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo G命令生成静态文件时出现渲染错误</title>
    <link href="https://www.livejq.top/2019/errors-when-hexo-g-generates-static-files.html"/>
    <id>https://www.livejq.top/2019/errors-when-hexo-g-generates-static-files.html</id>
    <published>2019-12-28T12:45:43.000Z</published>
    <updated>2020-10-22T13:38:05.581Z</updated>
    
    <content type="html"><![CDATA[<h4 id="遇到错误"><a href="#遇到错误" class="headerlink" title="遇到错误"></a>遇到错误</h4><ul><li>报错信息如下：</li></ul><pre class="line-numbers language-txt"><code class="language-txt">@lenovo ➜ blog git:(master) ✗ hexo gINFO  Start processingFATAL Something's wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.htmlTemplate render error: (unknown path)  Error: expected end of comment, got end of file    at Object._prettifyError (/old/blog/node_modules/nunjucks/src/lib.js:36:11)    at Template.render (/old/blog/node_modules/nunjucks/src/environment.js:542:21)    at Environment.renderString (/old/blog/node_modules/nunjucks/src/environment.js:380:17)    at /old/blog/node_modules/hexo/lib/extend/tag.js:123:48    at tryCatcher (/old/blog/node_modules/bluebird/js/release/util.js:16:23)    at Function.Promise.fromNode.Promise.fromCallback (/old/blog/node_modules/bluebird/js/release/promise.js:185:30)    at Tag.render (/old/blog/node_modules/hexo/lib/extend/tag.js:123:18)    at Object.onRenderEnd (/old/blog/node_modules/hexo/lib/hexo/post.js:280:20)    at /old/blog/node_modules/hexo/lib/hexo/render.js:64:19    at tryCatcher (/old/blog/node_modules/bluebird/js/release/util.js:16:23)    at Promise._settlePromiseFromHandler (/old/blog/node_modules/bluebird/js/release/promise.js:517:31)    at Promise._settlePromise (/old/blog/node_modules/bluebird/js/release/promise.js:574:18)    at Promise._settlePromise0 (/old/blog/node_modules/bluebird/js/release/promise.js:619:10)    at Promise._settlePromises (/old/blog/node_modules/bluebird/js/release/promise.js:699:18)    at _drainQueueStep (/old/blog/node_modules/bluebird/js/release/async.js:138:12)    at _drainQueue (/old/blog/node_modules/bluebird/js/release/async.js:131:9)    at Async._drainQueues (/old/blog/node_modules/bluebird/js/release/async.js:147:5)    at Immediate.Async.drainQueues (/old/blog/node_modules/bluebird/js/release/async.js:17:14)    at processImmediate (internal/timers.js:439:21)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h4><ul><li>问题主要出在 md 文件，也就是我们要发布的文章中。文章首部位置是声明文章元信息的地方，有着特殊的书写规范</li></ul><pre class="line-numbers language-txt"><code class="language-txt">---title: titlecategories: categoriestags: tagdate: date---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>就如同上面的那样，总结就是：</p><ol><li>必须以<code>- - -</code>这个符号开始或结束</li><li>上面的参数像 key: value 这样子对应，其中最重要的就是冒号和alue之间<code>必须要空一格</code></li><li>对于 value 值也是有硬性要求的，不能包括一些特殊字符和中文字符，有的话看看是不是那个问题（我的问题就出在这里了:T）</li><li>我遇到的特殊符号包括如下：</li></ol><pre class="line-numbers language-txt"><code class="language-txt">[ ]{ }( )...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>更多特殊字符可以参考 <a href="https://www.jianshu.com/p/a8748bf8df1b" rel="noopener" target="_blank">Hexo 中 Markdown 特殊字符的处理方法</a></p>]]></content>
    
    <summary type="html">
    
      hexo g,emplate render error:(unknown path),Error:expected end of comment,got end of file
    
    </summary>
    
      <category term="Hexo" scheme="https://www.livejq.top/categories/Hexo/"/>
    
    
      <category term="Question" scheme="https://www.livejq.top/tags/Question/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客的优化问题</title>
    <link href="https://www.livejq.top/2019/optimize-hexo-blog.html"/>
    <id>https://www.livejq.top/2019/optimize-hexo-blog.html</id>
    <published>2019-04-27T07:04:15.000Z</published>
    <updated>2020-10-22T10:30:36.664Z</updated>
    
    <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>刚搭好博客后觉得还不错，很好，很精致。但久了之后就发现其中还存在的问题（访问加载速度太慢了），而这还是通过别人的提醒后才真正着手去处理的。</p><p><img src="/img/cut-pic/19-4-27/reason.png" alt="reason.png"></p><p>一般人的做法都是先通过搜索引擎看看有没有人解决过类似的问题，但我经过一番折腾后发现，这些都比较旧，而且只是适应他们自己的网站优化的，所以通过各种比较，悉知共性后，自己查找资料文档来逐步解决。</p><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>先在Firefox中输入我的博客网址，然后点击分析（一个时钟图标）按钮即可。</p><p>我这里使用了一个很好用的工具<br><a href="https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor" target="_blank" rel="noopener">Firefox性能分析工具</a></p><p>打开网络监视器有几种不同的方法：</p><ul><li>按 Ctrl+ Shift+ E（Mac上为Command+ Option+ E）。</li><li>从Web Developer菜单中选择“Network”（这是OS X和Linux上Tools菜单的子菜单）。</li><li>按F12后点击上面的“网络”菜单</li></ul><p><img src="/img/cut-pic/19-4-27/network_analysis_tool.png" alt="network_analysis_tool.png"></p><p>刚开始我是用chrome的Network工具，结果（极度失望）：</p><p><img src="/img/cut-pic/19-4-27/so_slow.png" alt="so_slow.png"></p><p>当时没认真截图，但这张图也充分反映出了核心的问题：图片分辨率太大，就17.jpg这张图就耗费了1分钟，加载时间主要花费在图片上了。</p><p><strong>解决办法：</strong></p><ol><li>少发送请求<br>把要加载的js文件（css文件同理）合并成一个（尽量少）文件，则可以向服务器少发送请求，从而减少等待时间。</li></ol><ol start="2"><li>压缩文件<br>使用压缩之后的js、css、img文件，同样可以减少请求时间。</li></ol><ol start="3"><li>Css Sprite<br>这是css的一项技术，将图片尽可能多的合并成一个图片文件（例如：如果用到很多图标的话），第一次使用的时候加载这张图片，然后浏览器会缓存下来，其他地方再使用的时候就不需要重新请求了。</li></ol><ol start="4"><li>js／css位置<br>css引用建议放在head标签里面；js脚本建议放到body内容的最后，原因：等待js加载或者脚本有错误的时候不会影响html页面的展示。</li></ol><h2 id="GULP自动化构建工具"><a href="#GULP自动化构建工具" class="headerlink" title="GULP自动化构建工具"></a>GULP自动化构建工具</h2><hr><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><ul><li>gulp是前端开发过程中对代码进行构建的工具，是自动化项目的构建利器；她不仅能对网站资源进行优化，而且在开发过程中很多重复的任务能够使用正确的工具自动完成；使用她，我们不仅可以很愉快的编写代码，而且大大提高我们的工作效率。</li></ul><ul><li><p>gulp是基于Nodejs的自动任务运行器， 她能自动化地完成 javascript/coffee/sass/less/html/image/css 等文件的的测试、检查、合并、压缩、格式化、浏览器自动刷新、部署文件生成，并监听文件在改动后重复指定的这些步骤。在实现上，她借鉴了Unix操作系统的管道（pipe）思想，前一级的输出，直接变成后一级的输入，使得在操作上非常简单。通过本文，我们将学习如何使用Gulp来改变开发流程，从而使开发更加快速高效。</p></li><li><p>gulp 和 grunt 非常类似，但相比于 grunt 的频繁 IO 操作，gulp 的流操作，能更快地更便捷地完成构建工作。</p></li></ul><h3 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h3><p>这个使用需要用到两个文件：gulpfile.js和package.json文件，它们都放在项目的根目录下。</p><h4 id="gulpfile-js："><a href="#gulpfile-js：" class="headerlink" title="gulpfile.js："></a><strong>gulpfile.js：</strong></h4><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> cleanCSS <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-clean-css'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> uglify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-uglify'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> pipeline <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'readable-stream'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>pipeline<span class="token punctuation">;</span><span class="token keyword">var</span> htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-htmlmin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> imagemin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-imagemin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 压缩 /public/css 目录中的css文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'compress-css'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/css/*.css'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cleanCSS</span><span class="token punctuation">(</span><span class="token punctuation">{</span>compatibility<span class="token punctuation">:</span> <span class="token string">'ie8'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/css'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span> 压缩 <span class="token operator">/</span><span class="token keyword">public</span><span class="token operator">/</span><span class="token number">2018</span> 目录中的html文件gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'compress-html2018'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/2018/**/*.html'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> collapseWhitespace<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/2018'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 压缩 /public/2019 目录中的html文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'compress-html2019'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/2019/**/*.html'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> collapseWhitespace<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/2019'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 压缩 /public/js 目录中的js文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'compress-js'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token function">pipeline</span><span class="token punctuation">(</span>        gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./public/js/*.js'</span><span class="token punctuation">,</span> <span class="token string">'!./public/js/search.js'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/js'</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span> 压缩 <span class="token operator">/</span><span class="token keyword">public</span><span class="token operator">/</span>img 目录中的图片gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'compress-images'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> stream <span class="token operator">=</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/img/**/*.*'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">imagemin</span><span class="token punctuation">(</span><span class="token punctuation">[</span>          imagemin<span class="token punctuation">.</span><span class="token function">gifsicle</span><span class="token punctuation">(</span><span class="token punctuation">{</span>interlaced<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          imagemin<span class="token punctuation">.</span><span class="token function">jpegtran</span><span class="token punctuation">(</span><span class="token punctuation">{</span>progressive<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          imagemin<span class="token punctuation">.</span><span class="token function">optipng</span><span class="token punctuation">(</span><span class="token punctuation">{</span>optimizationLevel<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          imagemin<span class="token punctuation">.</span><span class="token function">svgo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>              plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>                  <span class="token punctuation">{</span>removeViewBox<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                  <span class="token punctuation">{</span>cleanupIDs<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span>              <span class="token punctuation">]</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/img'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> stream<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 默认任务 gulp 4.0 适用的方式</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'default'</span><span class="token punctuation">,</span> gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">'compress-js'</span><span class="token punctuation">,</span> <span class="token string">'compress-html2018'</span><span class="token punctuation">,</span> <span class="token string">'compress-html2019'</span> <span class="token comment" spellcheck="true">//build the website</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上文件中的用法,需根据自己的项目来配置，底部的参考文献中有详细的解释，因此不再赘述。</p><p><span style="color:red"><strong>温馨提示：</strong></span>**为匹配当前所有目录。</p><h4 id="异步执行task"><a href="#异步执行task" class="headerlink" title="异步执行task"></a>异步执行task</h4><p>有时候执行完会遇到Did you forget to ….等字样的信息,是因为你没有使用异步的方式执行task中的function。这里给出官方提供的三种方式：</p><ol><li>接受一个 callback</li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 在 shell 中执行一个命令</span><span class="token keyword">var</span> exec <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'child_process'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exec<span class="token punctuation">;</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'jekyll'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 编译 Jekyll</span>  <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">'jekyll build'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">cb</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 返回 error</span>    <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 完成 task</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>返回一个 stream</li></ol><pre class="line-numbers language-javascript"><code class="language-javascript">gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'somename'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> stream <span class="token operator">=</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'client/**/*.js'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">minify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'build'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> stream<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>返回一个 promise</li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> Q <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'somename'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> deferred <span class="token operator">=</span> Q<span class="token punctuation">.</span><span class="token function">defer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 执行异步的操作</span>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    deferred<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> deferred<span class="token punctuation">.</span>promise<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="package-json："><a href="#package-json：" class="headerlink" title="package.json："></a><strong>package.json：</strong></h4><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"hexo-site"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0.0.0"</span><span class="token punctuation">,</span>  <span class="token property">"private"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token property">"hexo"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"3.8.0"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"braces"</span><span class="token operator">:</span> <span class="token string">"^2.3.1"</span><span class="token punctuation">,</span>    <span class="token property">"clean-css"</span><span class="token operator">:</span> <span class="token string">"^4.1.11"</span><span class="token punctuation">,</span>    <span class="token property">"gulp-minify-css"</span><span class="token operator">:</span> <span class="token string">"^1.2.4"</span><span class="token punctuation">,</span>    <span class="token property">"hexo"</span><span class="token operator">:</span> <span class="token string">"^3.7.0"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-deployer-git"</span><span class="token operator">:</span> <span class="token string">"^1.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-generator-archive"</span><span class="token operator">:</span> <span class="token string">"^0.1.5"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-generator-category"</span><span class="token operator">:</span> <span class="token string">"^0.1.3"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-generator-feed"</span><span class="token operator">:</span> <span class="token string">"^1.2.2"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-generator-index"</span><span class="token operator">:</span> <span class="token string">"^0.2.1"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-generator-search-zip"</span><span class="token operator">:</span> <span class="token string">"0.0.1"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-generator-tag"</span><span class="token operator">:</span> <span class="token string">"^0.2.0"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-prism-plugin"</span><span class="token operator">:</span> <span class="token string">"^2.3.0"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-renderer-ejs"</span><span class="token operator">:</span> <span class="token string">"^0.3.1"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-renderer-marked"</span><span class="token operator">:</span> <span class="token string">"^0.3.2"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-renderer-stylus"</span><span class="token operator">:</span> <span class="token string">"^0.3.3"</span><span class="token punctuation">,</span>    <span class="token property">"hexo-server"</span><span class="token operator">:</span> <span class="token string">"^0.3.1"</span><span class="token punctuation">,</span>    <span class="token property">"marked"</span><span class="token operator">:</span> <span class="token string">"^0.6.2"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"gulp"</span><span class="token operator">:</span> <span class="token string">"^4.0.1"</span><span class="token punctuation">,</span>    <span class="token property">"gulp-clean-css"</span><span class="token operator">:</span> <span class="token string">"^4.2.0"</span><span class="token punctuation">,</span>    <span class="token property">"gulp-htmlclean"</span><span class="token operator">:</span> <span class="token string">"^2.7.22"</span><span class="token punctuation">,</span>    <span class="token property">"gulp-htmlmin"</span><span class="token operator">:</span> <span class="token string">"^5.0.1"</span><span class="token punctuation">,</span>    <span class="token property">"gulp-imagemin"</span><span class="token operator">:</span> <span class="token string">"^5.0.3"</span><span class="token punctuation">,</span>    <span class="token property">"gulp-rename"</span><span class="token operator">:</span> <span class="token string">"^1.4.0"</span><span class="token punctuation">,</span>    <span class="token property">"gulp-uglify"</span><span class="token operator">:</span> <span class="token string">"^3.0.2"</span><span class="token punctuation">,</span>    <span class="token property">"pump"</span><span class="token operator">:</span> <span class="token string">"^3.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"readable-stream"</span><span class="token operator">:</span> <span class="token string">"^3.3.0"</span><span class="token punctuation">,</span>    <span class="token property">"uglify-js"</span><span class="token operator">:</span> <span class="token string">"^3.5.9"</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个文件中主要得区分dependencies和devDependencies，前者为全局依赖，后者为此项目开发下的依赖。安装时的区别为:</p><ol><li><p>全局安装 gulp<br>$ npm install –global gulp</p></li><li><p>作为项目的开发依赖（devDependencies）安装：<br>$ npm install –save-dev gulp</p></li></ol><p>在Git Bash下进入博客根目录下，然后键入上述命令之后还得安装如下插件：（注意最好用–save-dev）</p><pre class="line-numbers language-text"><code class="language-text">    gulp-clean-css    gulp-htmlclean    gulp-htmlmin    gulp-imagemin    gulp-rename    gulp-uglify    readable-stream<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之后只要按顺序输入以下命令即可：</p><pre class="line-numbers language-text"><code class="language-text">    hexo clean    hexo g    gulp    hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>其中的gulp执行结果显示：</p><pre class="line-numbers language-CLI"><code class="language-CLI">$ gulp[11:51:49] Using gulpfile F:\blog\blog\gulpfile.js[11:51:49] Starting 'default'...[11:51:49] Starting 'compress-images'...[11:51:49] Starting 'compress-js'...[11:51:49] Starting 'compress-html2018'...[11:51:49] Starting 'compress-html2019'...[11:51:52] Finished 'compress-html2018' after 2.69 s[11:51:53] Finished 'compress-js' after 3.58 s[11:51:53] Finished 'compress-html2019' after 3.63 s[11:53:03] gulp-imagemin: Minified 81 images (saved 2.87 MB - 13.1%)[11:53:03] Finished 'compress-images' after 1.22 min[11:53:03] Finished 'default' after 1.22 min<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="压缩后的结果："><a href="#压缩后的结果：" class="headerlink" title="压缩后的结果："></a>压缩后的结果：</h3><p>img原来大小：121MB 压缩后大小：113MB(其中有很多没用到的图片，后面已移除)<br>js原来大小:468KB  压缩后大小:222KB<br>css原来大小:46.3KB 压缩后大小:67.5KB（这个压缩后反而更大。。暂时搞不清楚，所以就不压缩了）</p><p><img src="/img/cut-pic/19-4-27/analyse_first.png" alt="analyse_first.png"><br><img src="/img/cut-pic/19-4-27/analyse_first_min.png" alt="analyse_first_min.png"></p><p>重新访问后速度没提升多少，图片还是太大，而且我还发现其中还存在一个问题，就是有部分访问响应结果为404之类的错误，严重拖慢了加载的速度，然后我根据问题的来源，（就是一些时间脚本，还有leancloud评论功能加载错误导致的）解决后，我意外获得了一个jpg图片压缩工具。</p><p><img src="/img/cut-pic/19-4-27/jpg_tool.png" alt="jpg_tool.png"></p><p>经本人测试，效果与原图保持相同的最低图片压缩比就30了，低于30图片会失真，工具应该网上都有。</p><p><strong>21张jpg，总共13.9MB，压缩后为4MB</strong></p><h3 id="再次测试结果："><a href="#再次测试结果：" class="headerlink" title="再次测试结果："></a>再次测试结果：</h3><p>为了确保由于网速问题，先检查一下（前几次很可能是网速问题：T）：<br><img src="/img/cut-pic/19-4-27/web_speed.png" alt="web_speed.png"></p><p>然后再次测试：</p><p><img src="/img/cut-pic/19-4-27/analyse_second.png" alt="analyse_second.png"><br><img src="/img/cut-pic/19-4-27/analyse_second_min.png" alt="analyse_second_min.png"></p><p>到这里可以看出，还是图片的问题，我只能说美观得有代价。除非把图片都改成分辨率为800x300的那种（我这些都是1920x990以上的），如今只能将图片大小尽量控制在200KB一下会好一点。以上测试每次都是清除了缓存后再测的，第二次访问加载还是很快的。(尴尬的微笑~)</p><p>最终结果：<br><img src="/img/cut-pic/19-4-27/finish.png" alt="finish.png">  </p><h2 id="错误解决办法"><a href="#错误解决办法" class="headerlink" title="错误解决办法:"></a><span style="color:red"><strong>错误解决办法:</strong></span></h2><p>如果gulp命令出现err,说是找不到某某模块，则可键入命令npm install来重新构建所需模块,若此命令还出现如下问题：  </p><pre><code>npm WARN checkPermissions Missing write access to F:\blog\blog\node_modules\</code></pre><p>则直接将你的node_modules目录删除，然后重新以管理员身份重新npm install即可。</p><p>若安装出现什么npm audit fix等之类的，则可以先键入命令npm audit来进行所有插件的审阅，分析出所需插件的特定版本号，然后根据版本号和所需插件名，在package.json中的dependencies添加即可(^这个符号意思是不小于大版本号)</p><hr><p>前面的解决办法只是<code>治标不治本</code>的，要想显著提升访问速度，根源还是在<code>服务器</code>上。我这个服务器是借助于 Github 的，外国的服务器，访问有一定速度限制和固定 ip 段的约束（Google为例吧），一般都很慢。最好的做法是将<code>站点</code>放在国内的云服务器上，然后申请个<code>域名</code>，这个暂时不搞，一没钱二没时间​ emmm~​。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><ol><li><a href="http://www.ydcss.com/archives/18#lesson3" rel="noopener" target="_blank">gulp详细入门教程</a></li><li><a href="https://www.gulpjs.com.cn/" rel="noopener" target="_blank">gulp中文网</a></li><li><a href="http://luckykun.com/work/2016-07-10/hexo-faster.html" rel="noopener" target="_blank">hexo博客进阶－性能优化</a></li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      Hexo博客的优化问题，如何提升网站访问速度
    
    </summary>
    
      <category term="网站建设" scheme="https://www.livejq.top/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="SEO" scheme="https://www.livejq.top/tags/SEO/"/>
    
  </entry>
  
  <entry>
    <title>基于Hexo框架的个人博客搭建</title>
    <link href="https://www.livejq.top/2019/create-a-personal-blog-using-hexo.html"/>
    <id>https://www.livejq.top/2019/create-a-personal-blog-using-hexo.html</id>
    <published>2019-01-22T06:45:19.000Z</published>
    <updated>2020-10-22T11:28:49.958Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Github-Node-js-Hexo框架，搭建个人博客"><a href="#Github-Node-js-Hexo框架，搭建个人博客" class="headerlink" title="Github+Node.js+Hexo框架，搭建个人博客"></a>Github+Node.js+Hexo框架，搭建个人博客</h3><p>本人是参考了这篇 <a href="https://zhuanlan.zhihu.com/p/26625249/" rel="noopener" target="_blank">专栏</a> 一步一步完成搭建的基本工作的，基本上不用半天就可以搞定。其中遇到了一些意想不到的错误，但因有扎实的基础（自己之前写过好几个网站了，有用php的，也有用jsp的，也学过基于命令行的linux操作系统，对于命令有一定的了解）。在这里需要提一下的就是Hexo框架初始化完成之后该专栏省略了一步操作，导致通过localhost:4000访问时出现错误而无法访问（博主应该是漏写了：T），得右击blog目录（这是我的目录名，该目录为Hexo框架下的初始化了的主目录）进入Git Bash Here，然后通过命令npm install hexo-server –save安装服务器，然后通过命令hexo s开启本地服务才能访问。</p><h3 id="Annie主题的基本配置"><a href="#Annie主题的基本配置" class="headerlink" title="Annie主题的基本配置"></a>Annie主题的基本配置</h3><p>主题配置可以参考此<a href="https://sariay.github.io/2018/08/27/Annie%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/" rel="noopener" target="_blank">文章</a>，写得十分详细精致，值得学习，在此就不再赘述了。</p><h3 id="准备文章的编辑工具"><a href="#准备文章的编辑工具" class="headerlink" title="准备文章的编辑工具"></a>准备文章的编辑工具</h3><p>当然，如果您喜欢 记事本、sublime 或 notepad++ 之类的编辑工具并且对markdown的语法较为熟悉的话，也可以不使用专门为Windows平台打造的markdown编辑工具 MarkdownPad 2，本人还是比较推荐使用的，毕竟是量身定做的，而且还有实时预览的功能。</p><h4 id="下载安装MarkdownPad-2"><a href="#下载安装MarkdownPad-2" class="headerlink" title="下载安装MarkdownPad 2"></a>下载安装MarkdownPad 2</h4><ul><li><p>官网下载地址：<a href="http://www.markdownpad.com/" target="_blank" rel="noopener">点击下载</a> </p></li><li><p>安装后得升级到Pro才能获取该工具的全部功能，这里使用了这位 <a href="https://www.jianshu.com/p/a85e8b0545e2/" target="_blank" rel="noopener">大佬</a> 分享的 Markdownpad 2 的授权key,再次十分感谢！</p></li><li><p>新版本可能会因缺少实时预览的组件 <a href="http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe" target="_blank" rel="noopener">Awesomium</a> 而发生错误，若此则直接下载安装就行，否则会出现如下图所示的错误：<br><img src="/img/cut-pic/19-1-22/zViphhR.png" alt="HTML渲染组件出错.png"></p></li><li><p>所有操作完成后则可以写文章并实时预览了：<br><img src="/img/cut-pic/19-1-22/LGRAhTn.png" alt="MarkdownPad2预览效果图.png"></p></li><li><p>在此顺便提一下这里所用的图片已上传到<a href="https://i.imgur.com/" target="_blank" rel="noopener">https://i.imgur.com/</a> (目前国内被封，暂时不能访问)。imgur 提供免费图片空间，整体接口与操作方式相当简单，提供直接连结，可外部绑定图片。同时支持多种常见图片格式，例如 JPEG, GIF, PNG, TIFF, BMP, PDF, XFC (GIMP) ，不过必须注意的是 TIFF, BMP, PDF 和 XFC 档案在上传之后会被转为 PNG 格式。Imgur于2009年由俄亥俄大学一位大三学生Alan Schaaf创办，敬佩～。</p></li></ul>]]></content>
    
    <summary type="html">
    
      基于Hexo框架的个人博客搭建
    
    </summary>
    
      <category term="Hexo" scheme="https://www.livejq.top/categories/Hexo/"/>
    
    
      <category term="blog" scheme="https://www.livejq.top/tags/blog/"/>
    
  </entry>
  
</feed>
